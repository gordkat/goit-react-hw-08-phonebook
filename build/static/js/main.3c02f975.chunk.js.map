{"version":3,"sources":["components/AppBar.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/store.js","components/Navigation.js","components/AuthNav.js","components/UserMenu/no-foto.png","components/UserMenu/UserMenu.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["module","exports","contactsActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","find","name","toLowerCase","alert","filter","id","error","loading","combineReducers","contactsOperations","fetchContacts","dispatch","a","axios","get","data","message","addContact","number","contact","post","then","catch","deleteContact","contactId","delete","getFilter","contacts","contactsSelectors","getLoading","getVisibleContacts","createSelector","normalizedFilter","includes","authActions","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","token","isAuthenticated","defaults","baseURL","headers","common","Authorization","authOperations","register","credentials","response","logIn","logOut","getCurrentUser","getState","persistedToken","auth","authSelectors","getIsAuthenticated","getUserName","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","contactsReducer","devTools","process","persistore","persistStore","NavLink","require","connect","className","styles","navigation","to","exact","home","AuthNav","userNav","mapDispatchToProps","onLogout","avatar","noFoto","src","alt","width","type","onClick","header","Component","comp","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","color","height","timeout","path","ReactDOM","StrictMode","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.3c02f975.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"AppBar_navigation__1ii4e\",\"home\":\"AppBar_home__3x7n7\",\"userNav\":\"AppBar_userNav__33Dhb\",\"header\":\"AppBar_header__2v45d\",\"register\":\"AppBar_register__165TA\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contact/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contact/fetchContactsSuccess');\nconst fetchContactsError = createAction('contact/fetchContactsError');\n\nconst addContactRequest = createAction('contact/addContactRequest');\nconst addContactSuccess = createAction('contact/addContactSuccess');\nconst addContactError = createAction('contact/addContactError');\nconst deleteContactRequest = createAction('contact/deleteContactRequest');\nconst deleteContactSuccess = createAction('contact/deleteContactSuccess');\nconst deleteContactError = createAction('contact/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nconst contactsActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default contactsActions;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport contactsActions from './contacts-actions';\n\nconst items = createReducer([], {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => {\n    const isExistContact = state.find(\n      ({ name }) => name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    if (isExistContact) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [...state, payload];\n  },\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst error = createReducer(null, {\n  [contactsActions.fetchContactsError]: (_, { payload }) => {\n    alert(payload);\n    return payload;\n  },\n  [contactsActions.addContactError]: (_, { payload }) => {\n    alert(payload);\n    return payload;\n  },\n  [contactsActions.deleteContactError]: (_, { payload }) => {\n    alert(payload);\n    return payload;\n  },\n  [contactsActions.fetchContactsSuccess]: () => null,\n  [contactsActions.addContactSuccess]: () => null,\n  [contactsActions.deleteContactSuccess]: () => null,\n});\n\nconst filter = createReducer('', {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n});\n\nexport default combineReducers({ items, error, filter, loading });\n","import axios from 'axios';\nimport contactsActions from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(contactsActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error.message));\n  }\n};\n\nconst addContact = (name, number) => dispatch => {\n  const contact = { name, number };\n  dispatch(contactsActions.addContactRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\n    .catch(error => dispatch(contactsActions.addContactError(error.message)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(contactsActions.deleteContactSuccess(contactId)))\n    .catch(error =>\n      dispatch(contactsActions.deleteContactError(error.message)),\n    );\n};\n\nconst contactsOperations = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n\nexport default contactsOperations;\n","import { createSelector } from '@reduxjs/toolkit';\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nconst contactsSelectors = {\n  getLoading,\n  getFilter,\n  getVisibleContacts,\n};\n\nexport default contactsSelectors;\n","import { createAction } from '@reduxjs/toolkit';\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\nexport default authActions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, token, error, isAuthenticated });\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unSet() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unSet();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) return;\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { register, logIn, logOut, getCurrentUser };\r\nexport default authOperations;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\nconst authSelectors = { getIsAuthenticated, getUserName };\r\nexport default authSelectors;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst persistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nexport const store = configureStore({\n  reducer: { auth: persistedReducer, contacts: contactsReducer },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistore = persistStore(store);\n","import { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nimport styles from './AppBar.module.css';\r\nconst { NavLink } = require('react-router-dom');\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav className={styles.navigation}>\r\n    <NavLink to=\"/\" exact className={styles.home}>\r\n      Home\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink to=\"/contacts\" exact>\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import styles from './AppBar.module.css';\r\nconst { NavLink } = require('react-router-dom');\r\n\r\nconst AuthNav = () => (\r\n  <div className={styles.userNav}>\r\n    <NavLink className={styles.register} to=\"/register\" exact>\r\n      Registration\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact>\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/no-foto.22d7f1c8.png\";","import { connect } from 'react-redux';\r\nimport noFoto from './no-foto.png';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className=\"UserMenu\">\r\n    <img src={avatar} alt=\"user's avatar\" width=\"32\" className=\"User__avatar\" />\r\n    <span className=\"User__greating\">Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n  avatar: noFoto,\r\n  name: authSelectors.getUserName(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport { authSelectors } from '../redux/auth';\r\nimport styles from './AppBar.module.css';\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nconst PrivateRoute = ({\r\n  comp: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\nconst PublicRoute = ({ comp: Component, isAuthenticated, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to=\"/contacts\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport AppBar from './components/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense\n          fallback={\n            <Loader\n              type=\"Circles\"\n              color=\"#b2ee8e\"\n              height={50}\n              width={50}\n              timeout={3000}\n              className=\"Loader\"\n            />\n          }\n        >\n          <Switch>\n            <PublicRoute exact path=\"/\" comp={HomeView} />\n            <PublicRoute path=\"/register\" restricted comp={RegisterView} />\n            <PublicRoute path=\"/login\" restricted comp={LoginView} />\n            <PrivateRoute\n              path=\"/contacts\"\n              comp={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\nconst mapDispatchToProps = { onGetCurrentUser: authOperations.getCurrentUser };\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistore } from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistore}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}