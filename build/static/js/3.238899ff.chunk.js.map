{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","typeOfInput","currentTarget","input","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","styles","form__label","form__input","type","pattern","title","required","onChange","Component","connect","dispatch","contactsOperations","addContact","ContactItem","onDelete","contact","onClick","contacts","contactsSelectors","getVisibleContacts","id","deleteContact","map","contact__item","getFilter","contactsActions","changeFilter","target","filter__label","filter__input","ContactsView","fetchContacts","isLoadingContacts","color","height","width","timeout","getLoading"],"mappings":"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","file":"static/js/3.238899ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"ContactForm_form__label__2tXL9\",\"form__input\":\"ContactForm_form__input__1XEtl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__3yjxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__YvxvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__s5d57\",\"filter__input\":\"Filter_filter__input__1RNQD\"};","import ProtoTypes from 'prop-types';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { contactsOperations } from '../../redux/contacts';\n\nclass ContactForm extends Component {\n  static propTypes = { onSubmit: ProtoTypes.func.isRequired };\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    const typeOfInput = event.currentTarget.name;\n    const input = event.currentTarget.value;\n    this.setState({ [typeOfInput]: input });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label className={styles.form__label}>\n          Name\n          <input\n            className={styles.form__input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.form__label}>\n          Number\n          <input\n            className={styles.form__input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import ProtoTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <>\n      <span className={styles.contact}>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: ProtoTypes.string.isRequired,\n  number: ProtoTypes.string.isRequired,\n  onDelete: ProtoTypes.func.isRequired,\n};\nexport default ContactItem;\n","import { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\nimport ProtoTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport ContactItem from '../ContactItem/ContactItem';\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.contact__item}>\n        <ContactItem\n          name={name}\n          number={number}\n          id={id}\n          onDelete={() => onDelete(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: ProtoTypes.arrayOf(\n    ProtoTypes.shape({ id: ProtoTypes.string.isRequired }),\n  ),\n};\n\nconst mapStateToProps = state => {\n  return { contacts: contactsSelectors.getVisibleContacts(state) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from 'react-redux';\nimport { contactsActions } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\nimport ProtoTypes from 'prop-types';\nimport styles from './Filter.module.css';\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.filter__label}>\n    Find contacts by name\n    <input\n      className={styles.filter__input}\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\nFilter.propTypes = {\n  value: ProtoTypes.string,\n  onChange: ProtoTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\nconst mapDispatchtoProps = dispatch => ({\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchtoProps)(Filter);\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport ContactForm from '../components/ContactForm';\r\nimport ContactList from '../components/ContactList';\r\nimport Filter from '../components/Filter';\r\nimport { contactsOperations } from '../redux/contacts';\r\nimport { contactsSelectors } from '../redux/contacts';\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && (\r\n          <Loader\r\n            type=\"Circles\"\r\n            color=\"#b2ee8e\"\r\n            height={50}\r\n            width={50}\r\n            timeout={3000}\r\n            className=\"Loader\"\r\n          />\r\n        )}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: contactsSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}